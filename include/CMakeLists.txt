cmake_minimum_required(VERSION 3.14)
project(main)
set(CMAKE_CXX_STANDARD 14)
if(NOT APPLE AND NOT MSVC)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread")
endif()
get_filename_component(CCAPI_CPP_PROJECT_DIR ../ ABSOLUTE)
message(STATUS "CCAPI_CPP_PROJECT_DIR: ${CCAPI_CPP_PROJECT_DIR}")
set(RAPIDJSON_INCLUDE_DIR ${CCAPI_CPP_PROJECT_DIR}/dependency/rapidjson/include)
set(WEBSOCKETPP_INCLUDE_DIR ${CCAPI_CPP_PROJECT_DIR}/dependency/websocketpp)
set(BOOST_INCLUDE_DIR ${CCAPI_CPP_PROJECT_DIR}/dependency/boost)
set(DATE_INCLUDE_DIR ${CCAPI_CPP_PROJECT_DIR}/dependency/date/include)
find_package(OpenSSL REQUIRED)
set(OPENSSL_USE_STATIC_LIBS TRUE)
include_directories(${CCAPI_CPP_PROJECT_DIR}/include ${WEBSOCKETPP_INCLUDE_DIR} ${BOOST_INCLUDE_DIR} ${RAPIDJSON_INCLUDE_DIR} ${DATE_INCLUDE_DIR} ${OPENSSL_INCLUDE_DIR})
link_libraries(OpenSSL::Crypto OpenSSL::SSL)
file(GLOB SOURCES main.cpp)
set(SERVICE_LIST "MARKET_DATA")
set(EXCHANGE_LIST "COINBASE" "GEMINI" "KRAKEN" "BITSTAMP" "BITFINEX" "BITMEX" "BINANCE_US" "BINANCE" "BINANCE_FUTURES" "HUOBI" "OKEX")
foreach(SERVICE IN LISTS SERVICE_LIST)
    message(STATUS "SERVICE=${SERVICE}")
    foreach(EXCHANGE IN LISTS EXCHANGE_LIST)
        message(STATUS "EXCHANGE=${EXCHANGE}")
        set(CCAPI_CPP_TARGET_NAME "${SERVICE}__${EXCHANGE}")
        add_executable("${CCAPI_CPP_TARGET_NAME}" ${SOURCES})
        target_compile_definitions("${CCAPI_CPP_TARGET_NAME}" PRIVATE "ENABLE_SERVICE_${SERVICE}" "ENABLE_EXCHANGE_${EXCHANGE}")
        if("${EXCHANGE}" STREQUAL "HUOBI" OR "${EXCHANGE}" STREQUAL "OKEX")
          message(STATUS "need zlib")
		  find_package(ZLIB REQUIRED)
		  target_link_libraries("${CCAPI_CPP_TARGET_NAME}" PRIVATE ZLIB::ZLIB)
		endif()
    endforeach()
endforeach()

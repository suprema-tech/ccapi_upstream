set(NAME spot_market_making)
project(${NAME})
add_compile_definitions(CCAPI_ENABLE_SERVICE_MARKET_DATA)
add_compile_definitions(CCAPI_ENABLE_SERVICE_EXECUTION_MANAGEMENT)
if (NOT "$ENV{COINBASE_API_KEY}" STREQUAL "")
	message(STATUS "Enable coinbase")
	add_compile_definitions(CCAPI_ENABLE_EXCHANGE_COINBASE)
endif()
if (NOT "$ENV{GEMINI_API_KEY}" STREQUAL "")
	message(STATUS "Enable gemini")
	add_compile_definitions(CCAPI_ENABLE_EXCHANGE_GEMINI)
endif()
if (NOT "$ENV{BINANCE_US_API_KEY}" STREQUAL "")
	message(STATUS "Enable binance-us")
	add_compile_definitions(CCAPI_ENABLE_EXCHANGE_BINANCE_US)
endif()
if (NOT "$ENV{BINANCE_API_KEY}" STREQUAL "")
	message(STATUS "Enable binance")
	add_compile_definitions(CCAPI_ENABLE_EXCHANGE_BINANCE)
endif()
if (NOT "$ENV{HUOBI_API_KEY}" STREQUAL "")
	message(STATUS "Enable huobi")
	add_compile_definitions(CCAPI_ENABLE_EXCHANGE_HUOBI)
	find_package(ZLIB REQUIRED)
	link_libraries(ZLIB::ZLIB)
endif()
if (NOT "$ENV{OKEX_API_KEY}" STREQUAL "")
	message(STATUS "Enable okex")
	add_compile_definitions(CCAPI_ENABLE_EXCHANGE_OKEX)
  find_package(ZLIB REQUIRED)
  link_libraries(ZLIB::ZLIB)
endif()
if (NOT "$ENV{KUCOIN_API_KEY}" STREQUAL "")
	message(STATUS "Enable kucoin")
	add_compile_definitions(CCAPI_ENABLE_EXCHANGE_KUCOIN)
endif()
if (NOT "$ENV{FTX_API_KEY}" STREQUAL "")
	message(STATUS "Enable ftx")
	add_compile_definitions(CCAPI_ENABLE_EXCHANGE_FTX)
endif()
add_executable(${NAME} main.cpp)

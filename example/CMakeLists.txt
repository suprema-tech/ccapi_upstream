cmake_minimum_required (VERSION 3.14)
project (example)
set(CMAKE_CXX_STANDARD 14)
IF(NOT APPLE AND NOT MSVC)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread")
ENDIF()

set(WEBSOCKETPP_INCLUDE_DIR /Applications/eclipse/jee-oxygen/eclipse-workspace/brucewaynebrucewayne_ccapi_cpp/dependency/websocketpp)
get_filename_component(CCAPI_CPP_PROJECT_DIR ../ ABSOLUTE)
message("CCAPI_CPP_PROJECT_DIR: ${CCAPI_CPP_PROJECT_DIR}")
set(BOOST_INCLUDE_DIR /Users/pengwang/Documents/boost_1_74_0)

set(LOG_LEVEL $ENV{LOG_LEVEL})
message("LOG_LEVEL: ${LOG_LEVEL}")
cmake_policy(SET CMP0057 NEW)
if ("${LOG_LEVEL}" STREQUAL "trace")
  add_definitions(-DENABLE_TRACE_LOG)
endif()
if ("${LOG_LEVEL}" STREQUAL "debug")
  add_definitions(-DENABLE_DEBUG_LOG)
endif()
if ("${LOG_LEVEL}" STREQUAL "info")
  add_definitions(-DENABLE_INFO_LOG)
endif()
if ("${LOG_LEVEL}" STREQUAL "warn")
  add_definitions(-DENABLE_WARN_LOG)
endif()
if ("${LOG_LEVEL}" STREQUAL "error")
  add_definitions(-DENABLE_ERROR_LOG)
endif()
if ("${LOG_LEVEL}" STREQUAL "fatal")
  add_definitions(-DENABLE_FATAL_LOG)
endif()
add_definitions(-DENABLE_BINANCE_US)

find_package(OpenSSL REQUIRED)
set(OPENSSL_USE_STATIC_LIBS TRUE)
set(DATE_INCLUDE_DIR ${CCAPI_CPP_PROJECT_DIR}/dependency/date/include) 
message("DATE_INCLUDE_DIR: ${DATE_INCLUDE_DIR}")
set(RAPIDJSON_INCLUDE_DIR ${CCAPI_CPP_PROJECT_DIR}/dependency/rapidjson/include) 
message("RAPIDJSON_INCLUDE_DIR: ${RAPIDJSON_INCLUDE_DIR}")
add_definitions(-DENABLE_EXECUTION_MANAGEMENT_SERVICE)
include_directories(${CCAPI_CPP_PROJECT_DIR}/include ${BOOST_INCLUDE_DIR} ${OPENSSL_INCLUDE_DIR} ${WEBSOCKETPP_INCLUDE_DIR} ${DATE_INCLUDE_DIR} ${RAPIDJSON_INCLUDE_DIR})
link_libraries(OpenSSL::Crypto OpenSSL::SSL)
file(GLOB SOURCES_SIMPLE src/execution_management.cpp)
add_executable(execution_management ${SOURCES_SIMPLE})

cmake_minimum_required (VERSION 3.14)
project (simple)
set(CMAKE_CXX_STANDARD 14)
IF(NOT APPLE AND NOT MSVC)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread")
ENDIF()
get_filename_component(CCAPI_CPP_PROJECT_DIR ../../ ABSOLUTE)
set(RAPIDJSON_INCLUDE_DIR ${CCAPI_CPP_PROJECT_DIR}/dependency/rapidjson_tag_v1.1.0/include)
set(WEBSOCKETPP_INCLUDE_DIR ${CCAPI_CPP_PROJECT_DIR}/dependency/websocketpp_tag_0.8.2)
set(ASIO_INCLUDE_DIR ${CCAPI_CPP_PROJECT_DIR}/dependency/asio_tag_asio-1-17-0/asio/include)
set(DATE_INCLUDE_DIR ${CCAPI_CPP_PROJECT_DIR}/dependency/date_tag_v3.0.0/include)
find_package(OpenSSL REQUIRED)
set(OPENSSL_USE_STATIC_LIBS TRUE)
file(GLOB SOURCES *.cpp)
add_executable(simple ${SOURCES})
set(ENABLE_ALL_EXCHANGE $ENV{ENABLE_ALL_EXCHANGE})
message("ENABLE_ALL_EXCHANGE: ${ENABLE_ALL_EXCHANGE}")
if ("${ENABLE_ALL_EXCHANGE}" STREQUAL "true")
	add_definitions(-DENABLE_ALL_EXCHANGE)
endif()
add_definitions(-DENABLE_COINBASE)
target_include_directories(simple PRIVATE ${CCAPI_CPP_PROJECT_DIR}/include ${WEBSOCKETPP_INCLUDE_DIR} ${ASIO_INCLUDE_DIR} ${RAPIDJSON_INCLUDE_DIR} ${DATE_INCLUDE_DIR} ${OPENSSL_INCLUDE_DIR})
target_link_libraries(simple PRIVATE OpenSSL::Crypto OpenSSL::SSL)
